[{"C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\index.js":"1","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\reportWebVitals.js":"2","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\App.js":"3","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Detail.js":"4","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Account.js":"5","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Data.js":"6","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Cart.js":"7","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Qnadata.js":"8","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\QnaDetail.js":"9","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Userdata.js":"10"},{"size":593,"mtime":1627972040976,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1627901271903,"results":"13","hashOfConfig":"12"},{"size":12026,"mtime":1628677621586,"results":"14","hashOfConfig":"12"},{"size":6615,"mtime":1628619214397,"results":"15","hashOfConfig":"12"},{"size":8986,"mtime":1628746707637,"results":"16","hashOfConfig":"12"},{"size":1345,"mtime":1628492993328,"results":"17","hashOfConfig":"12"},{"size":1634,"mtime":1628493192005,"results":"18","hashOfConfig":"12"},{"size":3944,"mtime":1628610838343,"results":"19","hashOfConfig":"12"},{"size":1902,"mtime":1628606558367,"results":"20","hashOfConfig":"12"},{"size":7386,"mtime":1628746397964,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"cx4w22",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\index.js",[],["49","50"],"C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\reportWebVitals.js",[],"C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\App.js",["51","52","53","54","55","56","57","58"],"import { Navbar, NavDropdown, FormControl, Nav, Button, Form, Card, Carousel, Accordion } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Detail from './Detail.js';\nimport { Link, Route, Switch, useHistory, useParams } from 'react-router-dom';\nimport Account from './Account.js';\nimport axios from 'axios';\nimport Data from './Data.js';\nimport Cart from './Cart.js';\nimport QnaDetail from './QnaDetail.js';\nimport Qnadata from './Qnadata.js';\nimport Userdata from './Userdata';\n\n\nfunction App() {\n\n  let history = useHistory();\n  let [usrDta, changeusrDta] = useState(Userdata);\n  let [username,changeusername] = useState('');\n  let [password,changepassword] = useState('');\n  let [name,changename] = useState('');\n  let [email,changeemail] = useState('');\n  let [searchInput, changesearchInput] = useState('');\n  let [productData, changeProductData] = useState(Data);\n  let [qnaData, changeqnaData] = useState(Qnadata);\n\n  \n  \n\n  useEffect(()=>{axios.get('http://localhost:8081/api/product/join').then((result)=>{ changeProductData([...productData, ...result.data]) }).catch()},[]);\n\n  return (\n    <div className=\"App\">\n\n      { /* 네비게이션 바 */}\n\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">임시 제목 쇼핑몰</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav\n            className=\"mr-auto my-2 my-lg-0 \"\n            style={{ maxHeight: '100px' }}\n            navbarScroll\n          >\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/detail/1\">detail_temp</Nav.Link>\n            <NavDropdown title=\"Link\" id=\"navbarScrollingDropdown\">\n              <NavDropdown.Item href=\"/my-cart\">Cart_temp</NavDropdown.Item>\n              <NavDropdown.Item href=\"/blog\">Blog</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"/my-account\">My Account</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          &nbsp;\n          &nbsp;\n         \n          <Form className=\"d-flex\" onChange={(e)=>{changesearchInput(`${e.target.value}`)}} searchInput={searchInput}>\n            <FormControl\n              type=\"search\"\n              placeholder=\"Search\"\n              className=\"mr-2\"\n              aria-label=\"Search\"\n            />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n\n          <Nav>\n            <Nav.Link href=\"/log-in\">\n              Login\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      {/* 대문 */}\n\n    <Route exact path='/'>\n      <div>\n        <div>\n          <Carousel>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"img/1.jpg\"\n                alt=\"First slide\"\n              />\n              <Carousel.Caption>\n                <h3>First slide label</h3>\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"img/2.jpg\"\n                alt=\"Second slide\"\n              />\n\n              <Carousel.Caption>\n                <h3>Second slide label</h3>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"img/3.jpg\"\n                alt=\"Third slide\"\n              />\n\n              <Carousel.Caption>\n                <h3>Third slide label</h3>\n                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"img/4.jpg\"\n                alt=\"Third slide\"\n              />\n\n              <Carousel.Caption>\n                <h3>Third slide label</h3>\n                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n\n          </Carousel>\n        </div>\n      </div>\n      \n\n      {/* 상품 목록*/}\n\n      <div className=\"container\">\n        <div className=\"row\">\n\n          { /*\n          productData.map( (a,i)=>{ return <Maincard productData={a[i]} i={i} /> })\n          */ }\n              \n\n          <div className=\"col-md-3\">\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='img/5.jpg' />\n              <Card.Body>\n                <Card.Title>{productData[0].name}</Card.Title>\n                <Card.Text>\n                  {productData[0].cost} 원\n                </Card.Text>\n                <Link to='/detail/01'>\n                  <Button variant=\"primary\">Specific</Button>\n                </Link>\n              </Card.Body>\n            </Card>\n          </div>\n\n          <div className=\"col-md-3\">\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='img/6.jpg' />\n              <Card.Body>\n                <Card.Title>{productData[1].name}</Card.Title>\n                <Card.Text>\n                  {productData[1].cost}\n                </Card.Text>\n                <Link to='/detail/02'>\n                  <Button variant=\"primary\">Specific</Button>\n                </Link>\n              </Card.Body>\n            </Card>\n          </div>\n          <div className=\"col-md-3\">\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='img/7.jpg' />\n              <Card.Body>\n                <Card.Title>{productData[2].name}</Card.Title>\n                <Card.Text>\n                  {productData[2].cost}\n                </Card.Text>\n                <Link to='/detail/03'>\n                  <Button variant=\"primary\">Specific</Button>\n                </Link>\n              </Card.Body>\n            </Card>\n          </div>\n          <div className=\"col-md-3\">\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='img/8.jpg' />\n              <Card.Body>\n                <Card.Title>{productData[3].name}</Card.Title>\n                <Card.Text>\n                  {productData[3].cost}\n                </Card.Text>\n                <Link to='/detail/04'>\n                  <Button variant=\"primary\">Specific</Button>\n                </Link>\n              </Card.Body>\n            </Card>\n          </div>\n          \n\n          &nbsp;&nbsp;\n        </div>\n        <button onClick={ ()=>{ axios.get('http://localhost:8081/api/product/join').then((result)=>{ changeProductData([...productData, ...result.data]) }).catch(()=>{  }) } }>Show more</button>\n      </div>\n    </Route>\n\n      {/* 로그인 페이지 */}\n\n    <Route exact path='/log-in'>\n      <div className=\"logIn\">\n\n      <h1>Login</h1>\n      <p>Enter your ID and Password to login.</p>\n\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicID\" >\n            <Form.Label>ID</Form.Label>\n            <Form.Control type=\"id\" placeholder=\"ID\" onChange={ (e)=>{ changeusername(`${e.target.value}`) } } username={username}/>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" >\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={ (e)=>{ changepassword(`${e.target.value}`) } } password={password}/>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Remember me\" />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\" onClick={()=>{ history.push('/') \n            \n              axios.post('/user', {\n              username: username,\n              password: password\n            })\n            .then(function (response) {\n              console.log(username);\n              console.log(password);\n            })\n            .catch(function (error) {\n              console.log(username);\n              console.log(password);\n            });\n          \n            }}>\n            Submit\n          </Button>\n          &nbsp; &nbsp;\n          <Button variant=\"primary\" type=\"submit\" onClick={()=>{ history.push('/create-account') }}>\n            Sign-in\n          </Button>\n        </Form>\n      </div>\n    </Route>\n\n    { /* 상품 상세설명 페이지 */}\n\n    <Route path={'/detail/:id'}>\n      <Detail productData={productData} qnaData={qnaData}></Detail>\n    </Route>\n\n    {/* QNA 상세설명 페이지 */}\n\n    <Route path={'/qna-specific/:id'}>\n      <QnaDetail productData={productData} qnaData={qnaData}></QnaDetail>\n    </Route>\n\n    { /* 마이 어카운트 페이지 */}\n\n    <Route exact path='/my-account'>\n      <Account usrDta={usrDta}></Account>\n    </Route>\n\n    { /* 회원가입 페이지 */ }\n\n    <Route exact path='/create-account'>\n      <div className=\"createAccount\">\n        <h1>Create New Account</h1>\n        <p>Fill out the form to create new account</p>\n\n        <Form>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicID\" >\n            <Form.Label>ID</Form.Label>\n            <Form.Control type=\"id\" placeholder=\"ID\" onChange={ (e)=>{ changeusername(`${e.target.value}`) } } username={username}/>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" >\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={ (e)=>{ changepassword(`${e.target.value}`) } } password={password}/>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" >\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={ (e)=>{ changeemail(`${e.target.value}`) } } email={email}/>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicName\" >\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"name\" placeholder=\"Enter your Name\" onChange={ (e)=>{ changename(`${e.target.value}`) } } name={name}/>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\" onClick={()=>{ history.push('/') \n            {/*\n              axios.post('/user', {\n              username: username,\n              password: password,\n              email : email,\n              name : name\n            })\n            .then(function (response) {\n              console.log(username);\n              console.log(password);\n              console.log(email);\n              console.log(name);\n            })\n            .catch(function (error) {\n              console.log(username);\n              console.log(password);\n              console.log(email);\n              console.log(name);\n            });\n          */}\n        }}>\n            Submit\n          </Button>\n          &nbsp; &nbsp;\n          <Button variant=\"primary\" type=\"submit\" onClick={()=>{ history.push('/') }}>\n            Cancle\n          </Button>\n        </Form>\n      </div>\n    </Route>\n\n    { /* 카트 */}\n\n    <Route exact path='/my-cart'>\n      <Cart productData={productData}></Cart>\n    </Route>\n\n\n\n    \n\n    </div>\n\n    \n  );\n}\n\n{ /* 메인 화면 상품 카드 */ }\n\n/*\nfunction Maincard(props) {\n  return (\n    <div className=\"col-md-3\">\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src={\"holder.js/100px180\" + (props.i + 1) + \".jpg\"} />\n        <Card.Body>\n          <Card.Title>{ props.productData.name }</Card.Title>\n          <Card.Text>\n            { props.productData.cost}\n          </Card.Text>\n          <Link to={'/detail/' + (props.i + 1)}>\n            <Button variant=\"primary\">Specific</Button>\n          </Link>\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n*/\n\n\nexport default App;\n","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Detail.js",["59","60","61","62","63"],"import React, { useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Tab, Tabs, Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\nfunction Detail(props){\r\n  let {id} = useParams();\r\n  let history = useHistory();\r\n  let detailProduct = props.productData.find(function(product){\r\n    return(product.id == id -1)\r\n  });\r\n\r\n  let num = detailProduct.id;\r\n  let [title, changeTitle] = useState('');\r\n  let [content, changeContent] = useState('');\r\n  let [modal, changeModal] = useState(false);\r\n  let qnaData = props.qnaData;\r\n\r\n  const [qnas, setQnas] = useState(qnaData.slice(0,50));\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  const qnasPerPage = 5;\r\n  const qnaVisit = pageNumber * qnasPerPage;\r\n\r\n  const showQna = qnas\r\n  .slice(qnaVisit, qnaVisit + qnasPerPage)\r\n  .map((qnas) => {\r\n    return (\r\n      <Container qnaData={qnaData} detailProduct={detailProduct}>\r\n        <Link to={('/qna-specific/' + qnas.id)} className='noUnderline' qnaNum={qnas}>\r\n          <Row onClick={ ()=>{  } } className='qnabox'>\r\n            <Col>{qnas.id}</Col>\r\n            <Col xs={6}>{qnas.title}</Col>\r\n            <Col>{qnas.userUniqueId}</Col>\r\n            <Col>{qnas.content}</Col>\r\n            <Col xs={1}>{qnas.viewCount}</Col>\r\n          </Row>\r\n        </Link>\r\n      </Container>\r\n      );\r\n    });\r\n\r\n    const pageCount = Math.ceil(qnas.length / qnasPerPage);\r\n    const changePage = ({selected}) => {\r\n      setPageNumber(selected)\r\n    };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        { /* 디테일 위에 페이지 */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={'/img/' + (num + 5) + '.jpg'} width=\"100%\" />\r\n          </div>\r\n          <div className=\"col-md-6 mt-4\">\r\n            <h4 className=\"pt-5\">{detailProduct.name}</h4>\r\n            <p>{detailProduct.description}</p>\r\n            <p>{detailProduct.cost}원</p>\r\n            <p>재고: {detailProduct.stockQuantity}개</p>\r\n            &nbsp;\r\n            <button className=\"btn btn-danger\">바로주문</button> \r\n            &nbsp;\r\n            <button className=\"btn btn-danger\">장바구니</button> \r\n            &nbsp;\r\n            <button className=\"btn btn-danger\" onClick={ ()=>{ history.push('/') } }>뒤로</button>\r\n          </div>\r\n        </div>\r\n\r\n        &nbsp;\r\n        <p className=\"temp\">\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer luctus, ante lacinia dignissim commodo, arcu erat porta lacus, \r\n        eget viverra erat est quis orci. Etiam tempor, erat non hendrerit ullamcorper, nunc ex lacinia lectus, et vestibulum eros justo ac tellus. \r\n        Integer vel gravida mauris, ut commodo est. Nunc pharetra sapien eu dolor feugiat venenatis. Integer eget dui quis ex auctor scelerisque. \r\n        </p>\r\n        &nbsp;\r\n\r\n        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n          <Tab eventKey=\"profile\" title=\"Detail\">\r\n            <h4 className=\"pt-5\">\r\n              <img src={'/img/' + (num + 5) + '.jpg'} width=\"100%\" className=\"detailImg\"></img>\r\n              <h4>{detailProduct.description}</h4>\r\n              <p className=\"productDescription\">\"This will be replaced by specific detail of the product selected.\"</p>\r\n            </h4>\r\n          </Tab>\r\n          <Tab eventKey=\"home\" title=\"Q&A\">\r\n            <Container className='qnaList'>\r\n              <Row className='qnacategory'>\r\n                <Col>글번호</Col>\r\n                <Col xs={6}>글제목</Col>\r\n                <Col>글쓴놈</Col>\r\n                <Col>시간</Col>\r\n                <Col xs={1}>조회수</Col>\r\n              </Row>\r\n            </Container>\r\n              {showQna}\r\n            <h1></h1>\r\n            &nbsp;\r\n            <p> </p>\r\n            <Button onClick={ ()=>{ changeModal(!modal) } } className='detailQnA'>질문 입력</Button>\r\n            &nbsp;\r\n            &nbsp;\r\n            <ReactPaginate\r\n              previousLabel={\"<\"}\r\n              nextLabel={\">\"}\r\n              pageCount={pageCount}\r\n              onPageChange={changePage}\r\n              containerClassName={\"paginationButtons\"}\r\n              previousLinkClassName={\"PreviousButton\"}\r\n              nextLinkClassName={\"nextButton\"}\r\n              activeClassName={\"activeButton\"}\r\n            />\r\n          </Tab>\r\n          <Tab eventKey=\"contact\" title=\"Review\">\r\n            <div>{/* 제목 */}</div>\r\n            <h1>{/* 내용 */}</h1>\r\n            <p>{/* 작성자, 날짜 */}</p>\r\n            <p>준비중입니다.</p>\r\n          </Tab>\r\n        </Tabs>\r\n\r\n        {\r\n          modal === true\r\n          ? <Modal title={title} content={content} changeTitle={changeTitle} changeContent={changeContent} detailProduct={detailProduct}></Modal>\r\n          : null\r\n        }\r\n\r\n      </div>  \r\n    )\r\n  };\r\n\r\n  function Modal(props) {\r\n\r\n    return (\r\n      <h4 className='qnaInput'>\r\n        <Form>\r\n          <p className='qnaCreate'>\r\n            {props.detailProduct.name}에 대한 문의 사항을 입력해 주세요.\r\n          </p>\r\n          <div className='littleAlert'>\r\n            <p className='qnaAlert'>\r\n              해당 제품의 판매자가 문의사항을 확인하는 즉시 답변을 제공할 것입니다.\r\n            </p>\r\n            <p className='qnaAlert'>\r\n              답변 회신까지 평균 2~3일이 소요됩니다.\r\n            </p>\r\n          </div>\r\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\" onChange={(e)=>{ props.changeTitle(`${e.target.value}`) }}>\r\n            <Form.Label>제목</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"제목을 입력하세요\" />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\" onChange={(e)=>{ props.changeContent(`${e.target.value}`) }}>\r\n            <Form.Label>내용</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} />\r\n          </Form.Group>\r\n        </Form>\r\n        <Button onClick={()=>{ \r\n          axios.post('/user', {\r\n            title: props.title,\r\n            content: props.content\r\n          })\r\n          .then(function (response) {\r\n            console.log(props.title);\r\n            console.log(props.content);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(props.title);\r\n            console.log(props.content);\r\n          });\r\n        }}>전송</Button>\r\n      </h4>\r\n    )\r\n  }\r\n\r\n  export default Detail;","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Account.js",["64","65"],"C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Data.js",["66"],"export default [\r\n    {\r\n    id : 0,\r\n    name : \"ProductA\",\r\n    description : \"This is the ProductA\",\r\n    cost : 39800,\r\n    stockQuantity : 3000,\r\n    imageUrl : \"Null\"\r\n    },\r\n\r\n    {\r\n    id : 1,\r\n    name : \"ProductB\",\r\n    description : \"This is the ProductB\",\r\n    cost : 26000,\r\n    stockQuantity : 3000,\r\n    imageUrl : \"Null\"\r\n    },\r\n\r\n    {\r\n    id : 2,\r\n    name : \"ProductC\",\r\n    description : \"This is the ProductC\",\r\n    cost : 9500,\r\n    stockQuantity : 3000,\r\n    imageUrl : \"Null\"\r\n    },\r\n\r\n    {\r\n    id : 3,\r\n    name : \"ProductD\",\r\n    description : \"This is the ProductD\",\r\n    cost : 63000,\r\n    stockQuantity : 3000,\r\n    imageUrl : \"Null\"\r\n    },\r\n\r\n    {\r\n    id : 4,\r\n    name : \"ProductA\",\r\n    description : \"This is the ProductA\",\r\n    cost : 39800,\r\n    stockQuantity : 3000,\r\n    imageUrl : \"Null\"\r\n    },\r\n\r\n    {\r\n    id : 5,\r\n    name : \"ProductB\",\r\n    description : \"This is the ProductB\",\r\n    cost : 39800,\r\n    stockQuantity : 3000,\r\n    imageUrl : \"Null\"\r\n    },\r\n\r\n    {\r\n    id : 6,\r\n    name : \"ProductC\",\r\n    description : \"This is the ProductC\",\r\n    cost : 39800,\r\n    stockQuantity : 3000,\r\n    imageUrl : \"Null\"\r\n    },\r\n\r\n    {\r\n    id : 7,\r\n    name : \"ProductD\",\r\n    description : \"This is the ProductD\",\r\n    cost : 39800,\r\n    stockQuantity : 3000,\r\n    imageUrl : \"Null\"\r\n    }\r\n\r\n]","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Cart.js",["67","68","69","70","71"],"import React, { useState } from 'react';\r\nimport { ListGroup, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport './App.css';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Cart(props) {\r\n    let history = useHistory();\r\n    let product = useState(['']);\r\n    let {id} = useParams();\r\n\r\n    return(\r\n        <Container fluid=\"md\" className='cart_back'>\r\n            <Row>\r\n                <Col>\r\n                    <h1>\r\n                        My Cart    \r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={2} >\r\n                    left\r\n                </Col>\r\n                <Col xs={8} className='cart_middle'>\r\n                    \r\n                    {/* \r\n                    props.state.map((a,i)=>{\r\n                        return (\r\n                            <tr key={i}>\r\n                                <td>{ a.id }</td>\r\n                                <td>{ a.name }</td>\r\n                                <td>{ a.id }</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                */}\r\n                   \r\n                </Col>\r\n                <Col xs={2}>\r\n                    right\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col> \r\n                    <Button onClick={ ()=>{ history.push('/') } }>결제하기</Button>\r\n                    &nbsp;\r\n                    <Button>뒤로가기</Button></Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default Cart;","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Qnadata.js",["72"],"export default [\r\n    {\r\n        id : 1,\r\n        productId : 1,\r\n        userUniqueId : '지금은',\r\n        title : \"살려줘\",\r\n        content : \"내용\",\r\n        viewCount : 32\r\n\r\n    },\r\n\r\n    {\r\n        id : 2,\r\n        productId : 1,\r\n        userUniqueId : '새벽',\r\n        title : \"대체 왜\",\r\n        content : \"내용\",\r\n        viewCount : 65\r\n\r\n    },\r\n    \r\n    {\r\n        id : 3,\r\n        productId : 1,\r\n        userUniqueId : '4시',\r\n        title : \"밑줄이\",\r\n        content : \"내용\",\r\n        viewCount : 15\r\n        \r\n    },\r\n\r\n    {\r\n        id : 4,\r\n        productId : 1,\r\n        userUniqueId : '갬-성이',\r\n        title : \"여기서\",\r\n        content : \"내용\",\r\n        viewCount : 98\r\n        \r\n    },\r\n\r\n    {\r\n        id : 5,\r\n        productId : 1,\r\n        userUniqueId : '터지는시간',\r\n        title : \"안없어지는거야아아아아아아아아아아아아아아아아아아아아아아아아아\",\r\n        content : \"내용\",\r\n        viewCount : 1872\r\n        \r\n    },\r\n    \r\n    {\r\n        id : 6,\r\n        productId : 1,\r\n        userUniqueId : 'pagination',\r\n        title : \"이 새는\",\r\n        content : \"내용\",\r\n        viewCount : 32\r\n\r\n    },\r\n\r\n    {\r\n        id : 7,\r\n        productId : 1,\r\n        userUniqueId : '더럽게',\r\n        title : \"해로운 새다\",\r\n        content : \"내용\",\r\n        viewCount : 65\r\n\r\n    },\r\n    \r\n    {\r\n        id : 8,\r\n        productId : 1,\r\n        userUniqueId : '어렵네',\r\n        title : \"이는 과거\",\r\n        content : \"내용\",\r\n        viewCount : 15\r\n        \r\n    },\r\n\r\n    {\r\n        id : 9,\r\n        productId : 1,\r\n        userUniqueId : '진짜',\r\n        title : \"수박에서\",\r\n        content : \"내용\",\r\n        viewCount : 98\r\n        \r\n    },\r\n\r\n    {\r\n        id : 10,\r\n        productId : 1,\r\n        userUniqueId : '화가난다',\r\n        title : \"찾아볼 수 있다.\",\r\n        content : \"내용\",\r\n        viewCount : 1872\r\n        \r\n    },\r\n\r\n    {\r\n        id : 11,\r\n        productId : 1,\r\n        userUniqueId : '오늘은',\r\n        title : \"구구구구구\",\r\n        content : \"내용\",\r\n        viewCount : 32\r\n\r\n    },\r\n\r\n    {\r\n        id : 12,\r\n        productId : 1,\r\n        userUniqueId : '과연',\r\n        title : \"꼬꼬댁 꼬꼬\",\r\n        content : \"내용\",\r\n        viewCount : 65\r\n\r\n    },\r\n    \r\n    {\r\n        id : 13,\r\n        productId : 1,\r\n        userUniqueId : '몇시에',\r\n        title : \"꽥꽥\",\r\n        content : \"내용\",\r\n        viewCount : 15\r\n        \r\n    },\r\n\r\n    {\r\n        id : 14,\r\n        productId : 1,\r\n        userUniqueId : '자러',\r\n        title : \"푸드덕푸드덕\",\r\n        content : \"내용\",\r\n        viewCount : 98\r\n        \r\n    },\r\n\r\n    {\r\n        id : 15,\r\n        productId : 1,\r\n        userUniqueId : '가게될까',\r\n        title : \"해로운 새야\",\r\n        content : \"내용\",\r\n        viewCount : 1872\r\n        \r\n    },\r\n\r\n    {\r\n        id : 16,\r\n        productId : 1,\r\n        userUniqueId : '도비이즈프리',\r\n        title : \"병아리가 말했습니다.\",\r\n        content : \"내용\",\r\n        viewCount : 32\r\n\r\n    },\r\n\r\n    {\r\n        id : 17,\r\n        productId : 1,\r\n        userUniqueId : '도비는',\r\n        title : \"이 치킨은\",\r\n        content : \"내용\",\r\n        viewCount : 65\r\n\r\n    },\r\n    \r\n    {\r\n        id : 18,\r\n        productId : 1,\r\n        userUniqueId : '무료로',\r\n        title : \"우리 엄마애오\",\r\n        content : \"내용\",\r\n        viewCount : 15\r\n        \r\n    },\r\n\r\n    {\r\n        id : 19,\r\n        productId : 1,\r\n        userUniqueId : '해줍니다',\r\n        title : \"바삭해오\",\r\n        content : \"내용\",\r\n        viewCount : 98\r\n        \r\n    },\r\n\r\n    {\r\n        id : 20,\r\n        productId : 1,\r\n        userUniqueId : '코딩을',\r\n        title : \"머글래오?\",\r\n        content : \"내용\",\r\n        viewCount : 1872\r\n        \r\n    }\r\n\r\n]","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\QnaDetail.js",["73","74","75","76","77"],"import React, { useState } from 'react';\r\nimport { Row, Col, Container, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction QnaDetail(props) {\r\n  let {id} = useParams();\r\n  let [title, changeTitle] = useState(props.qnaData[id-1].title);\r\n  let [content, changeContent] = useState(props.qnaData[id-1].content);\r\n  let [viewCount, changeviewCount] = useState(props.qnaData[id-1].viewCount);\r\n  let [userUniqueId, changeuserUniqueId] = useState(props.qnaData[id-1].userUniqueId);\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <h4 className='specificQnaInput'>\r\n        <Container>\r\n          <Row className='qnatitle'>\r\n            <Col>{title}</Col>\r\n          </Row>\r\n          <Row className='smallText'>\r\n            <Col xs={3}>작성자: {userUniqueId} | 작성일: 2016-02-07</Col>\r\n            <Col></Col>\r\n            <Col xs={1}>조회수: {viewCount}</Col>\r\n            <Col xs={1}>글번호: {id}</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='qnaContent'>\r\n              문의{content},\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer luctus, ante lacinia dignissim commodo, arcu erat porta lacus, \r\n              eget viverra erat est quis orci. Etiam tempor, erat non hendrerit ullamcorper, nunc ex lacinia lectus, et vestibulum eros justo ac tellus. \r\n              Integer vel gravida mauris, ut commodo est. Nunc pharetra sapien eu dolor feugiat venenatis. Integer eget dui quis ex auctor scelerisque. \r\n            </Col>\r\n          </Row>\r\n          <Row className='underLine'></Row>\r\n        </Container>\r\n        &nbsp;\r\n        <p></p>\r\n        <Button onClick={ ()=>{ history.goBack(); } }>뒤로 가기</Button>\r\n      </h4>\r\n\r\n      <h4>\r\n\r\n      </h4>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default QnaDetail","C:\\Users\\주승언\\Desktop\\양-파\\code\\shopping\\src\\Userdata.js",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":79,"nodeType":"85","messageId":"86","endLine":1,"endColumn":88},{"ruleId":"83","severity":1,"message":"87","line":5,"column":23,"nodeType":"85","messageId":"86","endLine":5,"endColumn":29},{"ruleId":"83","severity":1,"message":"88","line":5,"column":43,"nodeType":"85","messageId":"86","endLine":5,"endColumn":52},{"ruleId":"83","severity":1,"message":"89","line":18,"column":16,"nodeType":"85","messageId":"86","endLine":18,"endColumn":28},{"ruleId":"83","severity":1,"message":"90","line":25,"column":17,"nodeType":"85","messageId":"86","endLine":25,"endColumn":30},{"ruleId":"91","severity":1,"message":"92","line":30,"column":151,"nodeType":"93","endLine":30,"endColumn":153,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":310,"column":13,"nodeType":"97","messageId":"98","endLine":329,"endColumn":14},{"ruleId":"95","severity":1,"message":"99","line":357,"column":1,"nodeType":"97","messageId":"100","endLine":357,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":12,"column":23,"nodeType":"103","messageId":"104","endLine":12,"endColumn":25},{"ruleId":"83","severity":1,"message":"105","line":21,"column":16,"nodeType":"85","messageId":"86","endLine":21,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":55,"column":13,"nodeType":"108","endLine":55,"endColumn":68},{"ruleId":"106","severity":1,"message":"107","line":82,"column":15,"nodeType":"108","endLine":82,"endColumn":90},{"ruleId":"109","severity":1,"message":"110","line":98,"column":13,"nodeType":"108","endLine":98,"endColumn":17},{"ruleId":"83","severity":1,"message":"88","line":5,"column":22,"nodeType":"85","messageId":"86","endLine":5,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":192,"column":30,"nodeType":"103","messageId":"104","endLine":192,"endColumn":32},{"ruleId":"111","severity":1,"message":"112","line":1,"column":1,"nodeType":"113","endLine":74,"endColumn":2},{"ruleId":"83","severity":1,"message":"114","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":19},{"ruleId":"83","severity":1,"message":"115","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":14},{"ruleId":"83","severity":1,"message":"116","line":5,"column":9,"nodeType":"85","messageId":"86","endLine":5,"endColumn":16},{"ruleId":"83","severity":1,"message":"117","line":9,"column":9,"nodeType":"85","messageId":"86","endLine":9,"endColumn":16},{"ruleId":"83","severity":1,"message":"118","line":10,"column":10,"nodeType":"85","messageId":"86","endLine":10,"endColumn":12},{"ruleId":"111","severity":1,"message":"112","line":1,"column":1,"nodeType":"113","endLine":202,"endColumn":2},{"ruleId":"83","severity":1,"message":"119","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":13},{"ruleId":"83","severity":1,"message":"120","line":10,"column":15,"nodeType":"85","messageId":"86","endLine":10,"endColumn":26},{"ruleId":"83","severity":1,"message":"121","line":11,"column":17,"nodeType":"85","messageId":"86","endLine":11,"endColumn":30},{"ruleId":"83","severity":1,"message":"122","line":12,"column":19,"nodeType":"85","messageId":"86","endLine":12,"endColumn":34},{"ruleId":"83","severity":1,"message":"123","line":13,"column":22,"nodeType":"85","messageId":"86","endLine":13,"endColumn":40},{"ruleId":"111","severity":1,"message":"112","line":1,"column":1,"nodeType":"113","endLine":262,"endColumn":2},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Accordion' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'useParams' is defined but never used.","'changeusrDta' is assigned a value but never used.","'changeqnaData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productData'. Either include it or remove the dependency array. You can also do a functional update 'changeProductData(p => ...)' if you only need 'productData' in the 'changeProductData' call.","ArrayExpression",["126"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Block is redundant.","redundantBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setQnas' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'ListGroup' is defined but never used.","'Link' is defined but never used.","'connect' is defined but never used.","'product' is assigned a value but never used.","'id' is assigned a value but never used.","'axios' is defined but never used.","'changeTitle' is assigned a value but never used.","'changeContent' is assigned a value but never used.","'changeviewCount' is assigned a value but never used.","'changeuserUniqueId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [productData]",{"range":"129","text":"130"},[1134,1136],"[productData]"]